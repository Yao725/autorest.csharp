{
  "swagger": "2.0",
  "info": {
    "title": "TenantExtension",
    "version": "2020-09-01",
    "description": "Tenant extension."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Apple/appleDefinitions/{appleDefinitionName}": {
      "put": {
        "tags": [
          "Apples"
        ],
        "operationId": "Apples_CreateOrUpdate",
        "summary": "Creates or updates an apple definition in a subscription.",
        "description": "This operation creates or updates an apple definition in the given subscription with the given name.",
        "parameters": [
          {
            "name": "appleDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the policy definition to create."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Apple"
            },
            "description": "The policy definition properties."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created - Returns information about the apple definition.",
            "schema": {
              "$ref": "#/definitions/Apple"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Apples"
        ],
        "operationId": "Apples_Delete",
        "summary": "Deletes an apple definition in a subscription.",
        "description": "This operation deletes the apple definition in the given subscription with the given name.",
        "parameters": [
          {
            "name": "appleDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the apple definition to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Apples"
        ],
        "operationId": "Apples_Get",
        "summary": "Retrieves an apple definition in a subscription.",
        "description": "This operation retrieves the apple definition in the given subscription with the given name.",
        "parameters": [
          {
            "name": "appleDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the apple definition to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the apple definition.",
            "schema": {
              "$ref": "#/definitions/Apple"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Apple/appleDefinitions": {
      "get": {
        "tags": [
          "Apples"
        ],
        "operationId": "Apples_List",
        "summary": "Retrieves apple definitions in a subscription",
        "description": "This operation retrieves a list of all the apple definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyDefinitionsFilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of apple definitions.",
            "schema": {
              "$ref": "#/definitions/PolicyDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.apple/appleDefinitions": {
      "get": {
        "tags": [
          "Apples"
        ],
        "operationId": "Apples_ListBuiltIn",
        "summary": "Retrieve built-in apple definitions",
        "description": "This operation retrieves a list of all the built-in apple definitions that match the optional given $filter. If $filter='policyType -eq {value}' is provided, the returned list only includes all built-in policy definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all built-in policy definitions whose category match the {value}.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PolicyDefinitionsFilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of built-in policy definitions.",
            "schema": {
              "$ref": "#/definitions/PolicyDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponse"
        }
      },
      "description": "An error response from a policy operation."
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
          "error": {
              "type": "string",
              "description": "The details of the error."
          }
      }
    },
    "PolicyDefinitionProperties": {
      "properties": {
        "policyType": {
          "type": "string",
          "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.",
          "enum": [
            "NotSpecified",
            "BuiltIn",
            "Custom",
            "Static"
          ],
          "x-ms-enum": {
            "name": "policyType",
            "modelAsString": true
          }
        },
        "mode": {
          "type": "string",
          "description": "The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.",
          "default": "Indexed"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the policy definition."
        },
        "description": {
          "type": "string",
          "description": "The policy definition description."
        },
        "policyRule": {
          "type": "object",
          "description": "The policy rule."
        },
        "metadata": {
          "type": "object",
          "description": "The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs."
        },
        "parameters": {
          "description": "The parameter definitions for parameters used in the policy rule. The keys are the parameter names.",
          "$ref": "#/definitions/ParameterDefinitions"
        }
      },
      "description": "The policy definition properties."
    },
    "ParameterDefinitionsValue": {
      "properties": {
        "type": {
          "description": "The data type of the parameter.",
          "type": "string",
          "enum": [
            "String",
            "Array",
            "Object",
            "Boolean",
            "Integer",
            "Float",
            "DateTime"
          ],
          "x-ms-enum": {
            "name": "parameterType",
            "modelAsString": true
          }
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "The allowed values for the parameter."
        },
        "defaultValue": {
          "type": "object",
          "description": "The default value for the parameter if no value is provided."
        },
        "metadata": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The display name for the parameter."
            },
            "description": {
              "type": "string",
              "description": "The description of the parameter."
            },
            "strongType": {
              "type": "string",
              "description": "Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from."
            },
            "assignPermissions": {
              "type": "boolean",
              "description": "Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope."
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "description": "General metadata for the parameter."
        }
      },
      "description": "The definition of a parameter that can be provided to the policy."
    },
    "ParameterDefinitions": {
      "description": "The parameter definitions for parameters used in the policy. The keys are the parameter names.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterDefinitionsValue"
      }
    },
    "Apple": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyDefinitionProperties",
          "description": "The policy definition properties."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the policy definition."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the policy definition."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource (Microsoft.Authorization/policyDefinitions)."
        }
      },
      "description": "The policy definition.",
      "x-ms-azure-resource": true
    },
    "PolicyDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Apple"
          },
          "description": "An array of policy definitions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of policy definitions."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ManagementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the management group.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the operation."
    },
    "PolicyDefinitionsFilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 1000,
      "description": "Maximum number of records to return. When the $top filter is not provided, it will return 500 records.",
      "x-ms-parameter-location": "method"
    }
  }
}
